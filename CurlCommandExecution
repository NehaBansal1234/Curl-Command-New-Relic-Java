import org.json.JSONException;
import org.json.JSONObject;
import java.io.IOException;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.Arrays;

/**
 * Created by nehabansal on 2/6/17.
 */
public class CurlCommandExecution {

    public static void main(String args[]) throws IOException, JSONException {
      ProcessBuilder pb = new ProcessBuilder(
                "curl",
              "--silent",
                "-H",
                "Accept: application/json",
                "-X",
                "GET",
                "<URL to New Relic Page which you want to query>",
                "-H",
                "X-Api-Key: <API key>"
           );




        pb.directory(new File("<Local file path>"));
        pb.redirectErrorStream(true);
        Process p = pb.start();
        InputStream is = p.getInputStream();

        String responseString = readInputStream(is);

        JSONObject job = new JSONObject(responseString);

   //This is an example to fetch the violation label name from the json object
   
        for(int i=0;i<job.getJSONArray("violations").length();i++) {
           if(job.getJSONArray("violations").getJSONObject(i).get("label").equals("Fullest disk > 5% for at least 5 minutes")){
               System.out.println(job.getJSONArray("violations").getJSONObject(i));

           }

        }


        FileOutputStream outputStream = new FileOutputStream(
                "<Local File Path>");

        String line;
        BufferedInputStream bis = new BufferedInputStream(is);
        byte[] bytes = new byte[100];
        int numberByteReaded;
        while ((numberByteReaded = bis.read(bytes, 0, 100)) != -1) {

            outputStream.write(bytes, 0, numberByteReaded);
            Arrays.fill(bytes, (byte) 0);

        }

        outputStream.flush();
        outputStream.close();

    }

    static private String readInputStream(InputStream inputStream) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(
                inputStream, "UTF-8"));
        String tmp;
        StringBuilder sb = new StringBuilder();
        while ((tmp = reader.readLine()) != null) {
            sb.append(tmp).append("\n");
        }
        if (sb.length() > 0 && sb.charAt(sb.length() - 1) == '\n') {
            sb.setLength(sb.length() - 1);
        }
       //reader.close();
        return sb.toString();
    }
}
